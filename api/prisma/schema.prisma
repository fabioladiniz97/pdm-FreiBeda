generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Usuarios {
  id          Int      @id @default(autoincrement())
  username    String
  email       String   @unique
  senha       String
  created_At  DateTime @default(now())
  modified_At DateTime @default(now())

  @@map("usuarios")
}

model OSC {
  id            Int          @id @default(autoincrement())
  nome          String
  sigla         String
  data_Fundacao DateTime
  publico_Alvo  String
  missao        String
  visao         String
  created_At  DateTime @default(now())
  modified_At DateTime @default(now())
  endereco      Enderecos?
  governanca    Governanca[]
  projetos      Projetos[]

  @@map("osc")
}

model Enderecos {
  id                 Int           @id @default(autoincrement())
  logradouro         String
  numero             String
  cep                String
  bairro             String
  cidade             String
  estado             String
  referencia         String
  id_fk_osc          Int           @unique
  id_fk_beneficiario Int           @unique
  created_At  DateTime @default(now())
  modified_At DateTime @default(now())
  beneficiarios      Beneficiarios @relation(fields: [id_fk_beneficiario], references: [id])
  osc                OSC           @relation(fields: [id_fk_osc], references: [id])

  @@map("enderecos")
}

model Governanca {
  id          Int      @id @default(autoincrement())
  nome        String
  cargo       String
  id_fk_osc   Int
  created_At  DateTime @default(now())
  modified_At DateTime @default(now())
  osc         OSC      @relation(fields: [id_fk_osc], references: [id])

  @@map("governanca")
}

model Projetos {
  id                   Int              @id @default(autoincrement())
  id_fk_osc            Int
  id_fk_resumo_Projeto Int
  beneficiarios        Beneficiarios[]
  planejamento         Planejamentos[]
  osc                  OSC              @relation(fields: [id_fk_osc], references: [id])
  resumo_Projeto       Resumo_Projetos?

  created_At  DateTime @default(now())
  modified_At DateTime @default(now())

  @@map("projetos")
}

model Resumo_Projetos {
  id             Int      @id @default(autoincrement())
  nome           String
  impacto        String
  objetivo       String
  atividades     String
  responsavel    String
  valor          String
  patrocinadores String
  id_fk_projeto  Int      @unique
  created_At  DateTime @default(now())
  modified_At DateTime @default(now())
  ended_At       DateTime @default(now())

  projeto        Projetos @relation(fields: [id_fk_projeto], references: [id])

  @@map("resumo_projetos")
}

model Beneficiarios {
  id                Int        @id @default(autoincrement())
  nome              String
  data_Nascimento   DateTime
  sexo              String
  cor_Declarada     String
  is_Menor          Boolean
  responsavel_Menor String
  profissao         String
  renda_Mensal      String
  id_fk_projeto     Int
  created_At  DateTime @default(now())
  modified_At DateTime @default(now())
  ended_At       DateTime @default(now())
  projeto           Projetos   @relation(fields: [id_fk_projeto], references: [id])
  endereco          Enderecos?

  @@map("beneficiarios")
}

model Planejamentos {
  id            Int      @id @default(autoincrement())
  atividade     String
  recursos      String
  custo         String
  responsavel   String
  status        Boolean
  id_fk_projeto Int
  created_At  DateTime @default(now())
  modified_At DateTime @default(now())
  ended_At       DateTime @default(now())
  projeto       Projetos @relation(fields: [id_fk_projeto], references: [id])

  @@map("planejamentos")
}
